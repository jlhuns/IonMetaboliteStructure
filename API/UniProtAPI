import requests
import os

def fetch_uniprot_file(uniprot_id: str, output_dir: str = ".", file_format: str = "txt"):
    """
    Fetches a UniProt file for a given UniProt ID and saves it to a specified directory.

    Parameters:
        uniprot_id (str): The UniProt ID of the protein (e.g., "P12345").
        output_dir (str): Directory where the file will be saved. Default is the current directory.
        file_format (str): Format of the file to retrieve (e.g., "txt", "fasta", "xml"). Default is "txt".

    Returns:
        str: Path to the saved file.

    Raises:
        ValueError: If the response from UniProt is not successful.
    """
    base_url = "https://rest.uniprot.org/uniprotkb/"
    url = f"{base_url}{uniprot_id}.{file_format}"

    try:
        response = requests.get(url)
        response.raise_for_status()
    except requests.exceptions.RequestException as e:
        raise ValueError(f"Failed to fetch UniProt file for ID {uniprot_id}: {e}")

    # Ensure the output directory exists
    os.makedirs(output_dir, exist_ok=True)

    # Save the file
    file_path = os.path.join(output_dir, f"{uniprot_id}.{file_format}")
    with open(file_path, "wb") as file:
        file.write(response.content)

    print(f"File saved to: {file_path}")
    return file_path

if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description="Fetch UniProt file for a given UniProt ID.")
    parser.add_argument("uniprot_id", type=str, help="The UniProt ID of the protein (e.g., P12345).")
    parser.add_argument("--output-dir", type=str, default=".", help="Directory to save the file (default: current directory).")
    parser.add_argument("--format", type=str, default="txt", choices=["txt", "fasta", "xml"], help="Format of the file (default: txt).")

    args = parser.parse_args()

    try:
        fetch_uniprot_file(args.uniprot_id, args.output_dir, args.format)
    except ValueError as e:
        print(e)
